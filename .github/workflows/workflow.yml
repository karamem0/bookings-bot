on:
  push:
    branches:
      - main
      - develop

env:
  BUILD_VERSION: '2.0.0'

jobs:
  select-environment:
    runs-on: ubuntu-latest
    steps:
      - name: Select environment from branch name
        id: select-environment
        shell: pwsh
        run: |
          if ("${{github.ref}}" -eq "refs/heads/main") {
            Write-Output "env-name=production" >> $env:GITHUB_OUTPUT
          }
          if ("${{github.ref}}" -eq "refs/heads/develop") {
            Write-Output "env-name=development" >> $env:GITHUB_OUTPUT
          }
    outputs:
      env-name: ${{steps.select-environment.outputs.env-name}}
  build-bot:
    needs: select-environment
    runs-on: ubuntu-latest
    environment:
      name: ${{needs.select-environment.outputs.env-name}}
    steps:
      - name: Checkout repos
        uses: actions/checkout@v4
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x
      - name: Rewrite index.html
        shell: pwsh
        run: |
          $content = Get-Content -Path wwwroot/index.html
          $content = $content -replace "{{APP_GITHUB_PAGE}}", "${{secrets.APP_GITHUB_PAGE}}"
          Out-File -FilePath wwwroot/index.html -InputObject $content -Encoding UTF8
        working-directory: source/Karamem0.BookingsBot
      - name: Restore source
        run: dotnet restore
        working-directory: source
      - name: Test source
        shell: pwsh
        run: |
          dotnet test `
            -p:AltCover=true `
            -- NUnit.TestOutputXml=${{github.workspace}}/source/test
        working-directory: source/Karamem0.BookingsBot.Tests
      - name: Build source
        shell: pwsh
        run: |
          dotnet publish `
            -c Release `
            -p:PublishDir=../../build `
            -p:Version=${{env.BUILD_VERSION}}.${{github.run_number}} `
            -p:FileVersion=${{env.BUILD_VERSION}}.${{github.run_number}}
        working-directory: source/Karamem0.BookingsBot
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bookings-bot
          path: build
      - name: Upload test results
        uses: enricomi/publish-unit-test-result-action/linux@v2
        if: always()
        with:
          files: |
            source/test/**/*.xml
          check_name: test-results
      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: always()
        with:
          fail_ci_if_error: true
          token: ${{secrets.CODECOV_TOKEN}}
  deploy-bot:
    needs:
      - select-environment
      - build-bot
    runs-on: ubuntu-latest
    environment:
      name: ${{needs.select-environment.outputs.env-name}}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: bookings-bot
          path: bookings-bot
      - name: Connect to Azure
        uses: azure/login@v2
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{secrets.APP_DEPLOYMENT_NAME}}
          package: bookings-bot
